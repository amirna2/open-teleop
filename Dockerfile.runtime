# Runtime-only Dockerfile for Open-Teleop
# This container only includes runtime dependencies, not build tools

# Base image: ROS 2 Jazzy on Ubuntu 24.04 Noble
FROM ros:jazzy-ros-base-noble

# Set non-interactive frontend for apt to avoid prompts
ENV DEBIAN_FRONTEND=noninteractive

# --- Add user/group setup ---
ARG UID=1978
ARG GID=1978
RUN groupadd --gid $GID teleop && \
    useradd --uid $UID --gid $GID --create-home --shell /bin/bash teleop

# Install runtime dependencies only (no build tools)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libzmq3-dev \
    python3-zmq \
    python3-flatbuffers \
    ros-jazzy-rmw-cyclonedds-cpp \
    # Clean up apt cache to reduce image size
    && rm -rf /var/lib/apt/lists/*

# Create log directory with proper permissions
RUN mkdir -p /tmp/open_teleop_logs && \
    chmod 777 /tmp/open_teleop_logs

# Create working directory in teleop's home
RUN mkdir -p /home/teleop/open-teleop && \
    chown -R teleop:teleop /home/teleop/open-teleop

# Set working directory
WORKDIR /home/teleop/open-teleop

# Copy the installed files directly into the container
COPY ./install/ /home/teleop/open-teleop/

# Fix permissions
RUN chown -R teleop:teleop /home/teleop/open-teleop

# Switch to non-root user
USER teleop:teleop

# Set environment variables
ENV PATH="/home/teleop/open-teleop/bin:${PATH}"
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp

# Set the entrypoint to use our start script
ENTRYPOINT ["/home/teleop/open-teleop/scripts/start.sh"] 